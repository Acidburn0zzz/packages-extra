--- kolasa_fglrx_3.10.patch~	2013-07-06 19:21:06.839920000 +0200
+++ kolasa_fglrx_3.10.patch	2013-07-06 21:14:16.618827405 +0200
@@ -62,7 +62,7 @@ diff -uN 13.4/common/lib/modules/fglrx/b
 diff -uN 13.4/common/lib/modules/fglrx/build_mod/firegl_public.c 13.4/common/lib/modules/fglrx/build_mod/firegl_public.c
 --- 13.4/common/lib/modules/fglrx/build_mod/firegl_public.c	2013-04-16 23:29:55.000000000 +0200
 +++ 13.4/common/lib/modules/fglrx/build_mod/firegl_public.c	2013-05-19 12:05:33.842076474 +0200
-@@ -520,12 +520,23 @@
+@@ -520,12 +520,23 @@ READ_PROC_WRAP(firegl_lock_info)
  #ifdef DEBUG
  READ_PROC_WRAP(drm_bq_info)
  #endif
@@ -72,7 +72,7 @@ diff -uN 13.4/common/lib/modules/fglrx/b
  READ_PROC_WRAP(firegl_bios_version)
  READ_PROC_WRAP(firegl_interrupt_info)
  READ_PROC_WRAP(firegl_ptm_info)
-
+ 
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
  static int firegl_debug_proc_write_wrap(void* file, const char *buffer, unsigned long count, void *data)
 +#else
@@ -83,14 +83,13 @@ diff -uN 13.4/common/lib/modules/fglrx/b
 +
 +static ssize_t firegl_debug_proc_write_wrap(struct file *file, const char *buffer, size_t count, void *data)
 +#endif
- {
-     return firegl_debug_proc_write(file, buffer, count, data);
+ {                                                                  
+     return firegl_debug_proc_write(file, buffer, count, data);     
  }
-@@ -543,14 +554,20 @@
+@@ -543,14 +554,19 @@ static int firegl_debug_proc_write_wrap(
   *
   * \return number of bytes written
   */
-+
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
  static int firegl_major_proc_read(char *buf, char **start, kcl_off_t offset,
                                    int request, int* eof, void* data)
@@ -100,18 +99,18 @@ diff -uN 13.4/common/lib/modules/fglrx/b
  {
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
      int len = 0;    // For ProcFS: fill buf from the beginning
-
+ 
      KCL_DEBUG1(FN_FIREGL_PROC, "offset %d\n", (int)offset);
-
--    if (offset > 0)
+ 
+-    if (offset > 0) 
 +    if (offset > 0)
      {
          KCL_DEBUG1(FN_FIREGL_PROC, "no partial requests\n");
          return 0; /* no partial requests */
-@@ -561,8 +578,10 @@
-
+@@ -561,8 +577,10 @@ static int firegl_major_proc_read(char *
+ 
      len = snprintf(buf, request, "%d\n", major);
-
+ 
 +#else
 +    int len = seq_printf(m, "%d\n", major);
 +#endif
@@ -119,11 +118,11 @@ diff -uN 13.4/common/lib/modules/fglrx/b
 -
      return len;
  }
-
-@@ -583,6 +602,29 @@
+ 
+@@ -583,6 +601,29 @@ kcl_proc_list_t KCL_PROC_FileList[] =
      { "NULL",           NULL,                       NULL} // Terminate List!!!
  };
-
+ 
 +#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,10,0)
 +static int firegl_major_proc_open(struct inode *inode, struct file *file){
 +        return single_open(file, firegl_major_proc_read, NULL);
@@ -150,7 +149,7 @@ diff -uN 13.4/common/lib/modules/fglrx/b
  static struct proc_dir_entry *firegl_proc_init( device_t *dev,
                                                  int minor,
                                                  struct proc_dir_entry *root,
-@@ -595,7 +637,11 @@
+@@ -595,7 +636,11 @@ static struct proc_dir_entry *firegl_pro
      KCL_DEBUG1(FN_FIREGL_PROC, "minor %d, proc_list 0x%08lx\n", minor, (unsigned long)proc_list);
      if (!minor)
      {
@@ -160,9 +159,9 @@ diff -uN 13.4/common/lib/modules/fglrx/b
 +        root = proc_mkdir("ati", NULL);
 +#endif
      }
-
+ 
      if (!root)
-@@ -607,18 +653,28 @@
+@@ -607,18 +652,28 @@ static struct proc_dir_entry *firegl_pro
      if (minor == 0)
      {
          // Global major debice number entry
@@ -181,7 +180,7 @@ diff -uN 13.4/common/lib/modules/fglrx/b
          ent->read_proc = (read_proc_t*)firegl_major_proc_read;
 +#endif
      }
-
+ 
      sprintf(name, "%d", minor);
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
      *dev_root = create_proc_entry(name, S_IFDIR, root);
@@ -191,8 +190,8 @@ diff -uN 13.4/common/lib/modules/fglrx/b
      if (!*dev_root) {
          remove_proc_entry("major", root);
          remove_proc_entry("ati", NULL);
-@@ -628,7 +684,12 @@
-
+@@ -628,7 +683,12 @@ static struct proc_dir_entry *firegl_pro
+ 
      while (list->f || list->fops)
      {
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
@@ -204,15 +203,15 @@ diff -uN 13.4/common/lib/modules/fglrx/b
          if (!ent)
          {
              KCL_DEBUG_ERROR("Cannot create /proc/ati/%s/%s\n", name, list->name);
-@@ -646,6 +707,7 @@
+@@ -646,6 +706,7 @@ static struct proc_dir_entry *firegl_pro
              return NULL;
          }
-
+ 
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
          if (list->f)
          {
              ent->read_proc = (read_proc_t*)list->f;
-@@ -659,19 +721,25 @@
+@@ -659,19 +720,25 @@ static struct proc_dir_entry *firegl_pro
          {
              ent->data = (dev->pubdev.signature == FGL_DEVICE_SIGNATURE)? firegl_find_device(minor) : (dev);
          }
@@ -220,23 +219,22 @@ diff -uN 13.4/common/lib/modules/fglrx/b
 +#endif
          list++;
      }
-
+ 
      if (minor == 0)
      {
          // Global debug entry, only create it once
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
          ent = create_proc_entry("debug", S_IFREG|S_IRUGO, root);
--        if (ent)
 +#else
 +        ent = proc_create_data("debug", S_IFREG|S_IRUGO, root, &firegl_debug_fops, dev);
 +#endif
-+        if (ent)
+         if (ent) 
          {
 +#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
-             ent->read_proc = (read_proc_t*)firegl_debug_proc_read_wrap;
-             ent->write_proc = (write_proc_t*)firegl_debug_proc_write_wrap;
+             ent->read_proc = (read_proc_t*)firegl_debug_proc_read_wrap;     
+             ent->write_proc = (write_proc_t*)firegl_debug_proc_write_wrap;  
              ent->data = dev;
 +#endif
          }
      }
-
+ 
