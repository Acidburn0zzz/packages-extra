diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/mintMenu.py mintmenu/usr/lib/linuxmint/mintMenu/mintMenu.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/mintMenu.py	2013-04-08 12:46:08.000000000 +0200
+++ mintmenu/usr/lib/linuxmint/mintMenu/mintMenu.py	2013-04-11 13:54:37.190629603 +0200
@@ -73,7 +73,7 @@ class MainWindow( object ):
 
         self.detect_desktop_environment()
 
-        self.icon = "/usr/lib/linuxmint/mintMenu/visualisation-logo.png"
+        self.icon = "/usr/lib/linuxmint/mintMenu/manjaro-icon-16.svg"
 
         self.toggle = toggleButton
         # Load UI file and extract widgets   
@@ -743,10 +743,10 @@ class MenuWin( object ):
         about = Gtk.AboutDialog()
         about.set_name("mintMenu")
         import commands
-        version = commands.getoutput("/usr/lib/linuxmint/common/version.py mintmenu")
+        version = "__version__"
         about.set_version(version)
         try:
-            h = open('/usr/share/common-licenses/GPL','r')
+            h = open('/usr/share/licenses/common/GPL2/license.txt','r')
             s = h.readlines()
             gpl = ""
             for line in s:
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/mintMenuConfig.glade mintmenu/usr/lib/linuxmint/mintMenu/mintMenuConfig.glade
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/mintMenuConfig.glade	2013-04-08 12:46:08.000000000 +0200
+++ mintmenu/usr/lib/linuxmint/mintMenu/mintMenuConfig.glade	2013-04-11 13:55:41.492760631 +0200
@@ -1128,15 +1128,6 @@
                       </packing>
                     </child>
                     <child>
-                      <object class="GtkCheckButton" id="use_apt">
-                        <property name="label" translatable="yes">Search for packages to install</property>
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="receives_default">False</property>
-                        <property name="events">GDK_POINTER_MOTION_MASK | GDK_POINTER_MOTION_HINT_MASK | GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK</property>
-                        <property name="use_action_appearance">False</property>
-                        <property name="draw_indicator">True</property>
-                      </object>
                       <packing>
                         <property name="right_attach">2</property>
                         <property name="top_attach">6</property>
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/mintMenuConfig.py mintmenu/usr/lib/linuxmint/mintMenu/mintMenuConfig.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/mintMenuConfig.py	2013-04-08 12:46:08.000000000 +0200
+++ mintmenu/usr/lib/linuxmint/mintMenu/mintMenuConfig.py	2013-04-11 13:56:36.760377215 +0200
@@ -54,7 +54,6 @@ class mintMenuConfig( object ):
         self.builder.get_object("showAppComments").set_label(_("Show application comments"))
         self.builder.get_object("showCategoryIcons").set_label(_("Show category icons"))
         self.builder.get_object("hover").set_label(_("Hover"))
-        self.builder.get_object("use_apt").set_label(_("Search for packages to install"))
         self.builder.get_object("swapGeneric").set_label(_("Swap name and generic name"))
 
         self.builder.get_object("label11").set_text(_("Border width:"))
@@ -117,7 +116,6 @@ class mintMenuConfig( object ):
 
         self.startWithFavorites = self.builder.get_object( "startWithFavorites" )
         self.showAppComments = self.builder.get_object( "showAppComments" )
-        self.useAPT = self.builder.get_object( "use_apt" )
         self.showCategoryIcons = self.builder.get_object( "showCategoryIcons" )
         self.showRecentPlugin = self.builder.get_object( "showRecentPlugin" )
         self.showApplicationsPlugin = self.builder.get_object( "showApplicationsPlugin" )
@@ -201,7 +199,6 @@ class mintMenuConfig( object ):
 
         self.bindGSettingsValueToWidget( self.settings, "bool", "start-with-favorites", self.startWithFavorites, "toggled", self.startWithFavorites.set_active, self.startWithFavorites.get_active )
         self.bindGSettingsValueToWidget( self.settingsApplications, "bool", "show-application-comments", self.showAppComments, "toggled", self.showAppComments.set_active, self.showAppComments.get_active )
-        self.bindGSettingsValueToWidget( self.settingsApplications, "bool", "use-apt", self.useAPT, "toggled", self.useAPT.set_active, self.useAPT.get_active )
         self.bindGSettingsValueToWidget( self.settingsApplications, "bool", "show-category-icons", self.showCategoryIcons, "toggled", self.showCategoryIcons.set_active, self.showCategoryIcons.get_active )
         self.bindGSettingsValueToWidget( self.settingsApplications, "bool", "categories-mouse-over", self.hover, "toggled", self.hover.set_active, self.hover.get_active )
         self.bindGSettingsValueToWidget( self.settingsApplications, "bool", "swap-generic-name", self.swapGeneric, "toggled", self.swapGeneric.set_active, self.swapGeneric.get_active )
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/mintRemove.py mintmenu/usr/lib/linuxmint/mintMenu/mintRemove.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/mintRemove.py	2013-03-10 03:02:01.000000000 +0100
+++ mintmenu/usr/lib/linuxmint/mintMenu/mintRemove.py	2013-04-11 14:03:03.170390845 +0200
@@ -34,21 +34,10 @@ class RemoveExecuter(threading.Thread):
 
     def run(self):  
         removePackages = string.split(self.package)
-        cmd = ["sudo", "/usr/sbin/synaptic", "--hide-main-window",  \
-                "--non-interactive", "--parent-window-id", self.window_id]
-        cmd.append("--progress-str")
-        cmd.append("\"" + _("Please wait, this can take some time") + "\"")
-        cmd.append("--finish-str")
-        cmd.append("\"" + _("Application removed successfully") + "\"")
-        f = tempfile.NamedTemporaryFile()
-        for pkg in removePackages:
-            f.write("%s\tdeinstall\n" % pkg)
-            cmd.append("--set-selections-file")
-            cmd.append("%s" % f.name)
-            f.flush()
-            comnd = Popen(' '.join(cmd), shell=True)
+        cmd = ["sudo", "mate-terminal", "-e",  \
+                "\"/usr/lib/linuxmint/mintMenu/removescript", self.package, "\""]
+        comnd = Popen(' '.join(cmd), shell=True)
         returnCode = comnd.wait()
-        f.close()
         Gtk.main_quit()
         sys.exit(0)
 
@@ -73,14 +62,14 @@ class mintRemoveWindow:
         socket.show()
         window_id = repr(socket.get_id())
 
-        package = commands.getoutput("dpkg -S " + self.desktopFile)
-        package = package[:package.find(":")]
-        if package == "dpkg":
+        package = commands.getoutput("pacman -Qqo " + self.desktopFile)
+
+        if package[:6] == "error:":
             warnDlg = Gtk.Dialog("MintMenu", None, 0,
                                   Gtk.STOCK_CANCEL, Gtk.ResponseType.CANCEL,
                                   Gtk.STOCK_REMOVE, Gtk.ResponseType.OK)
             warnDlg.vbox.set_spacing(10)
-            warnDlg.set_icon_from_file("/usr/share/linuxmint/logo.png")
+            warnDlg.set_icon_from_file("/usr/lib/linuxmint/mintMenu/manjaro-icon-32.svg")
             labelSpc = Gtk.Label(" ")
             warnDlg.vbox.pack_start(labelSpc, False, False, 0)
             labelSpc.show()
@@ -116,7 +105,7 @@ class mintRemoveWindow:
         treeview.append_column(column1)
 
         model = Gtk.ListStore(str)
-        dependenciesString = commands.getoutput("apt-get -s -q remove " + package + " | grep Remv")
+        dependenciesString = commands.getoutput("pacman -Rsp " + package + "|sed -e 's/-[0-9].*//'")
         dependencies = string.split(dependenciesString, "\n")
         for dependency in dependencies:
             dependency = dependency.replace("Remv ", "")
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/applications.py mintmenu/usr/lib/linuxmint/mintMenu/plugins/applications.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/applications.py	2013-04-08 12:46:08.000000000 +0200
+++ mintmenu/usr/lib/linuxmint/mintMenu/plugins/applications.py	2013-04-11 14:10:57.023836570 +0200
@@ -295,7 +295,6 @@ class pluginclass( object ):
             self.settings.notifyAdd( "swap-generic-name", self.changeSwapGenericName )
             self.settings.notifyAdd( "show-category-icons", self.changeShowCategoryIcons )
             self.settings.notifyAdd( "show-application-comments", self.changeShowApplicationComments )
-            self.settings.notifyAdd( "use-apt", self.switchAPTUsage)
             self.settings.notifyAdd( "fav-cols", self.changeFavCols )
 
             self.settings.bindGSettingsEntryToVar( "int", "category-hover-delay", self, "categoryhoverdelay" )
@@ -333,19 +332,13 @@ class pluginclass( object ):
             #       self.menuFileMonitors.append( filemonitor.addMonitor(f, self.onMenuChanged, mymenu.directory.Filename ) )
             #for f in mymenu.directory.AppDirs:
             #       self.menuFileMonitors.append( filemonitor.addMonitor(f, self.onMenuChanged, mymenu.directory.Filename ) )
-                        
-        self.refresh_apt_cache()        
+                               
         self.suggestions = []
         self.current_suggestion = None
         self.panel = "top"
         self.panel_position = -1
 
-        self.builder.get_object("searchButton").connect( "button-release-event", self.searchPopup )        
-
-    def refresh_apt_cache(self):
-        if self.useAPT:
-            os.system("mkdir -p %s/.linuxmint/mintMenu/" % home)
-            os.system("/usr/lib/linuxmint/mintMenu/plugins/get_apt_cache.py > %s/.linuxmint/mintMenu/apt.cache &" % home)            
+        self.builder.get_object("searchButton").connect( "button-release-event", self.searchPopup )
 
     def get_panel(self):
         panelsettings = Gio.Settings.new("org.mate.panel")
@@ -358,13 +351,6 @@ class pluginclass( object ):
                 if iid is not None and iid.find("MintMenu") != -1:
                     self.panel = object_schema.get_string("toplevel-id")
                     self.panel_position = object_schema.get_int("position") + 1
-
-    def apturl_install(self, widget, pkg_name):
-		if os.path.exists("/usr/bin/apturl"):
-			os.system("/usr/bin/apturl apt://%s &" % pkg_name)
-		else:
-			os.system("xdg-open apt://" + pkg_name + " &")    
-		self.mintMenuWin.hide()
     
     def __del__( self ):
         print u"Applications plugin deleted"
@@ -438,10 +424,6 @@ class pluginclass( object ):
         for child in self.favoritesBox:
             if isinstance( child, FavApplicationLauncher):
                 child.setIconSize( self.faviconsize )
-                
-    def switchAPTUsage( self, settings, key, args ):
-        self.useAPT = settings.get_boolean(key)
-        self.refresh_apt_cache()
 
     def changeShowApplicationComments( self, settings, key, args ):
         self.showapplicationcomments = settings.get_boolean(key)
@@ -465,9 +447,6 @@ class pluginclass( object ):
         for fav in self.favorites:
             self.favoritesBox.remove( fav )
             self.favoritesPositionOnGrid( fav )
-
-    def RegenPlugin( self, *args, **kargs ):            
-        self.refresh_apt_cache()
         
         # save old config - this is necessary because the app will notified when it sets the default values and you don't want the to reload itself several times
         oldcategories_mouse_over = self.categories_mouse_over
@@ -501,7 +480,6 @@ class pluginclass( object ):
         self.showcategoryicons = self.settings.get( "bool", "show-category-icons")
         self.categoryhoverdelay = self.settings.get( "int", "category-hover-delay")
         self.showapplicationcomments = self.settings.get( "bool", "show-application-comments")
-        self.useAPT = self.settings.get( "bool", "use-apt")
 
         self.lastActiveTab =  self.settings.get( "int", "last-active-tab")
         self.defaultTab = self.settings.get( "int", "default-tab")
@@ -658,90 +636,7 @@ class pluginclass( object ):
         #self.applicationsBox.add(self.last_separator)
         #self.suggestions.append(self.last_separator)            
 
-    def add_apt_filter_results(self, keyword):
-        try:   
-            # Wait to see if the keyword has changed.. before doing anything
-            current_keyword = keyword
-            current_keyword = self.searchEntry.get_text()
-            if keyword != current_keyword:
-                return            
-            found_packages = []
-            found_in_name = []
-            found_elsewhere = []
-            keywords = keyword.split(" ")
-            command = "cat %(home)s/.linuxmint/mintMenu/apt.cache" % {'home':home}
-            for word in keywords:
-                command = "%(command)s | grep %(word)s" % {'command':command, 'word':word}            
-            pkgs = commands.getoutput(command)
-            pkgs = pkgs.split("\n")
-            num_pkg_found = 0
-            for pkg in pkgs:
-                values = string.split(pkg, "###")
-                if len(values) == 4:
-                    status = values[0]
-                    if (status == "ERROR"):
-                        print "Could not refresh APT cache"
-                    elif (status == "CACHE"):
-                        name = values[1]
-                        summary = values[2]
-                        description = values[3].replace("~~~", "\n")
-                        package = PackageDescriptor(name, summary, description)
-                        #See if all keywords are in the name (so we put these results at the top of the list)
-                        some_found = False
-                        some_not_found = False
-                        for word in keywords:
-                            if word in package.name:
-                                some_found = True
-                            else:
-                                some_not_found = True
-                        if some_found and not some_not_found:
-                            found_in_name.append(package)
-                        else:                        
-                            found_elsewhere.append(package)                                        
-                        num_pkg_found+=1
-                    else:
-                        print "Invalid status code: " + status
-                if num_pkg_found >= 3:
-                    break
-            found_packages.extend(found_in_name)
-            found_packages.extend(found_elsewhere)
-            if keyword == self.searchEntry.get_text() and len(found_packages) > 0:         
-                last_separator = Gtk.EventBox()
-                last_separator.add(Gtk.HSeparator())
-                last_separator.set_visible_window(False)
-                last_separator.set_size_request(-1, 20)       
-                last_separator.type = "separator"   
-                self.mintMenuWin.SetPaneColors( [  last_separator ] )     
-                last_separator.show_all()
-                self.applicationsBox.add(last_separator)
-                self.suggestions.append(last_separator)
-                for pkg in found_packages:                        
-                    name = pkg.name
-                    for word in keywords: 
-                        if word != "":             
-                            name = name.replace(word, "<b>%s</b>" % word);
-                    suggestionButton = SuggestionButton(Gtk.STOCK_ADD, self.iconSize, "")
-                    suggestionButton.connect("clicked", self.apturl_install, pkg.name)
-                    suggestionButton.set_text(_("Install package '%s'") % name)
-                    suggestionButton.set_tooltip_text("%s\n\n%s\n\n%s" % (pkg.name, pkg.summary, pkg.description))
-                    suggestionButton.set_icon_size(self.iconSize)
-                    self.applicationsBox.add(suggestionButton)
-                    self.suggestions.append(suggestionButton)
-                    #if cache != self.current_results:
-                    #    self.current_results.append(pkg)
-
-            #if len(found_packages) == 0:
-            #    gtk.gdk.threads_enter()
-            #    try:
-            #        self.applicationsBox.remove(self.last_separator)
-            #        self.suggestions.remove(self.last_separator)
-            #    finally:
-            #        gtk.gdk.threads_leave()           
-                
-        except Exception, detail:
-            print detail           
 
-            
     def add_apt_filter_results_sync(self, cache, keyword):
         try:           
             found_packages = []           
@@ -808,27 +703,8 @@ class pluginclass( object ):
                     if (shown):
                         showns = True
                 
-                if (not showns and os.path.exists("/usr/lib/linuxmint/mintInstall/icon.svg")):
-                    if len(text) >= 3:
-                        if self.current_suggestion is not None and self.current_suggestion in text:
-                            # We're restricting our search... 
-                            self.add_search_suggestions(text)
-                            #if (len(self.current_results) > 0):
-                                #self.add_apt_filter_results_sync(self.current_results, text)
-                            #else:
-                            GLib.timeout_add (300, self.add_apt_filter_results, text)
-                        else:
-                            self.current_results = []  
-                            self.add_search_suggestions(text)
-                            GLib.timeout_add (300, self.add_apt_filter_results, text)
-
-                        self.current_suggestion = text
-                    else:
-                        self.current_suggestion = None
-                        self.current_results = []
-                else:
-                    self.current_suggestion = None
-                    self.current_results = []
+                self.current_suggestion = None
+                self.current_results = []
 
                 for i in self.categoriesBox.get_children():
                     i.set_relief( Gtk.ReliefStyle.NONE )
@@ -1055,35 +931,28 @@ class pluginclass( object ):
         img = Gtk.Image()
         img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/software.png')
         menuItem.set_image(img)
-        menuItem.connect("activate", self.search_mint_software)
+        menuItem.connect("activate", self.search_arch_software)
         menu.append(menuItem)
         
         menuItem = Gtk.ImageMenuItem(_("Find Tutorials"))
         img = Gtk.Image()
-        img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/tutorials.png')
+        img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/ideas.png')
         menuItem.set_image(img)
-        menuItem.connect("activate", self.search_mint_tutorials)
+        menuItem.connect("activate", self.search_aur_software)
         menu.append(menuItem)
         
-        menuItem = Gtk.ImageMenuItem(_("Find Hardware"))
+        menuItem = gtk.ImageMenuItem(_("Find Bugs"))
         img = Gtk.Image()
         img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/hardware.png')
         menuItem.set_image(img)
-        menuItem.connect("activate", self.search_mint_hardware)
-        menu.append(menuItem)
-        
-        menuItem =Gtk.ImageMenuItem(_("Find Ideas"))
-        img = Gtk.Image()
-        img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/ideas.png')
-        menuItem.set_image(img)
-        menuItem.connect("activate", self.search_mint_ideas)
+        menuItem.connect("activate", self.search_arch_bugs)
         menu.append(menuItem)
         
-        menuItem = Gtk.ImageMenuItem(_("Find Users"))
+        menuItem = gtk.ImageMenuItem(_("Search Arch Wiki"))
         img = Gtk.Image()
-        img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/users.png')
+        img.set_from_file('/usr/lib/linuxmint/mintMenu/search_engines/tutorials.png')
         menuItem.set_image(img)
-        menuItem.connect("activate", self.search_mint_users)
+        menuItem.connect("activate", self.search_arch_wiki)
         menu.append(menuItem)
         
         menu.show_all()
@@ -1120,34 +989,28 @@ class pluginclass( object ):
         os.system("mate-dictionary \"" + text + "\" &")
         self.mintMenuWin.hide()
         
-    def search_mint_tutorials(self, widget):
-        text = self.searchEntry.get_text()
-        text = text.replace(" ", "%20")
-        os.system("xdg-open \"http://community.linuxmint.com/index.php/tutorial/search/0/" + text + "\" &")     
-        self.mintMenuWin.hide()
-    
-    def search_mint_ideas(self, widget):
+    def search_aur_software(self, widget):
         text = self.searchEntry.get_text()
         text = text.replace(" ", "%20")
-        os.system("xdg-open \"http://community.linuxmint.com/index.php/idea/search/0/" + text + "\" &")     
+        os.system("xdg-open \"http://aur.archlinux.org/packages.php?O=0&K=" + text + "\" &")     
         self.mintMenuWin.hide()
     
-    def search_mint_users(self, widget):
+    def search_arch_wiki(self, widget):
         text = self.searchEntry.get_text()
         text = text.replace(" ", "%20")
-        os.system("xdg-open \"http://community.linuxmint.com/index.php/user/search/0/" + text + "\" &")     
+        os.system("xdg-open \"http://wiki.archlinux.org/index.php?title=Special:Search&search=" + text + "\" &")     
         self.mintMenuWin.hide()
     
-    def search_mint_hardware(self, widget):
+    def search_arch_bugs(self, widget):
         text = self.searchEntry.get_text()
         text = text.replace(" ", "%20")
-        os.system("xdg-open \"http://community.linuxmint.com/index.php/hardware/search/0/" + text + "\" &")     
+        os.system("xdg-open \"https://bugs.archlinux.org/index.php?string=" + text + "&project=0\" &")     
         self.mintMenuWin.hide()
         
-    def search_mint_software(self, widget):
+    def search_arch_software(self, widget):
         text = self.searchEntry.get_text()
         text = text.replace(" ", "%20")
-        os.system("xdg-open \"http://community.linuxmint.com/index.php/software/search/0/" + text + "\" &")     
+        os.system("xdg-open \"http://www.archlinux.org/packages/?q=" + text + "\" &")     
         self.mintMenuWin.hide()
         
 
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/easybuttons.py mintmenu/usr/lib/linuxmint/mintMenu/plugins/easybuttons.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/easybuttons.py	2013-04-08 12:46:08.000000000 +0200
+++ mintmenu/usr/lib/linuxmint/mintMenu/plugins/easybuttons.py	2013-04-11 14:11:51.837893181 +0200
@@ -377,7 +377,7 @@ class ApplicationLauncher( easyButton ):
     def execute( self, *args ):
         if self.appExec:
             if self.useTerminal:
-                cmd = "x-terminal-emulator -e \"" + self.appExec + "\""
+                cmd = "mate-terminal -e \"" + self.appExec + "\""
                 Execute(cmd)
             else:
                 Execute(self.appExec)
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/easygconf.py mintmenu/usr/lib/linuxmint/mintMenu/plugins/easygconf.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/easygconf.py	2013-03-04 13:53:09.000000000 +0100
+++ mintmenu/usr/lib/linuxmint/mintMenu/plugins/easygconf.py	2013-04-11 14:12:53.635439364 +0200
@@ -62,7 +62,7 @@ class EasyGConf:
 			return self.client.set_string( key, value )
 
 		if type == "int":
-			return self.client.set_int( key, value )
+			return self.client.set_int( key, int(round(value)) )
 
 		if type == "color":
 			if self.evalColor( value ):
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/places.py mintmenu/usr/lib/linuxmint/mintMenu/plugins/places.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/places.py	2013-03-10 03:02:01.000000000 +0100
+++ mintmenu/usr/lib/linuxmint/mintMenu/plugins/places.py	2013-04-11 14:20:54.829077209 +0200
@@ -152,6 +152,8 @@ class pluginclass( object ):
             Button2 = easyButton( "user-home", self.iconsize, [_("Home Folder")], -1, -1 )
             if self.de == "mate":
                 Button2.connect( "clicked", self.ButtonClicked, "caja %s " % home )
+            elif self.de == "xfce":
+                Button2.connect( "clicked", self.ButtonClicked, "exo-open --launch FileManager %s " % home )
             else:
                 Button2.connect( "clicked", self.ButtonClicked, "xdg-open %s " % home )
             Button2.show()
@@ -167,6 +169,8 @@ class pluginclass( object ):
                 Button3 = easyButton( "network-workgroup", self.iconsize, [_("Network")], -1, -1)
             if self.de == "mate":
                 Button3.connect( "clicked", self.ButtonClicked, "caja network:" )
+            if self.de == "xfce":
+                Button3.connect( "clicked", self.ButtonClicked, "exo-open --launch FileManager network:" )
             else:
                 Button3.connect( "clicked", self.ButtonClicked, "xdg-open network:" )
             Button3.show()
@@ -199,7 +203,7 @@ class pluginclass( object ):
         if ( self.showtrash == True ):
             self.trashButton = easyButton( "user-trash", self.iconsize, [_("Trash")], -1, -1 )
             if self.de == "xfce":
-                self.trashButton.connect( "clicked", self.ButtonClicked, "thunar trash:" )
+                self.trashButton.connect( "clicked", self.ButtonClicked, "exo-open --launch FileManager trash:" )
             elif self.de == "mate":
                 self.trashButton.connect( "clicked", self.ButtonClicked, "caja trash:" )
             else:
@@ -216,6 +220,8 @@ class pluginclass( object ):
             path = path.replace("~", home)
             if self.de == "mate":
                 command = ( "caja \"" + path + "\"")
+            elif self.de == "xfce":
+                command = ( "exo-open --launch FileManager \"" + path + "\"")
             else:
                 command = ( "xdg-open \"" + path + "\"")
             currentbutton = easyButton( "folder", self.iconsize, [self.customnames[index]], -1, -1 )
@@ -249,6 +255,8 @@ class pluginclass( object ):
         self.mintMenuWin.hide()
         if self.de == "mate":
             os.system("caja %s &" % path)        
+        if self.de == "xfce":
+            os.system("exo-open --launch FileManager %s &" % path) 
         else:
             os.system("xdg-open %s &" % path)        
 
diff -Npur mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/system_management.py mintmenu/usr/lib/linuxmint/mintMenu/plugins/system_management.py
--- mintmenu.orig/usr/lib/linuxmint/mintMenu/plugins/system_management.py	2013-03-06 11:19:59.000000000 +0100
+++ mintmenu/usr/lib/linuxmint/mintMenu/plugins/system_management.py	2013-04-11 14:26:14.838982437 +0200
@@ -53,7 +53,7 @@ class pluginclass( object ):
         self.settings.notifyAdd( "show_lock_screen", self.RegenPlugin )
         self.settings.notifyAdd( "show_logout", self.RegenPlugin )
         self.settings.notifyAdd( "show_package_manager", self.RegenPlugin )
-        self.settings.notifyAdd( "show_software_manager", self.RegenPlugin )
+        self.settings.notifyAdd( "show_root_terminal", self.RegenPlugin )
         self.settings.notifyAdd( "show_terminal", self.RegenPlugin )
         self.settings.notifyAdd( "show_quit", self.RegenPlugin )
         self.settings.notifyAdd( "allow-scrollbar", self.RegenPlugin )
@@ -106,7 +106,7 @@ class pluginclass( object ):
 
         # Check toggles
 
-        self.showSoftwareManager = self.settings.get( "bool", "show-software-manager")
+        self.showSoftwareManager = self.settings.get( "bool", "show_root_terminal", True )
         self.showPackageManager = self.settings.get( "bool", "show-package-manager")
         self.showControlCenter = self.settings.get( "bool", "show-control-center")
         self.showTerminal = self.settings.get( "bool", "show-terminal")
@@ -132,19 +132,22 @@ class pluginclass( object ):
     def do_standard_items( self ):
 
         if ( self.showSoftwareManager == True ):
-            if os.path.exists("/usr/lib/linuxmint/mintInstall/icon.svg"):
-                Button1 = easyButton( "/usr/lib/linuxmint/mintInstall/icon.svg", self.iconsize, [_("Software Manager")], -1, -1 )
-                Button1.connect( "clicked", self.ButtonClicked, "gksu mintinstall" )
-                Button1.show()
-                self.systemBtnHolder.pack_start( Button1, False, False, 0)
-                self.mintMenuWin.setTooltip( Button1, _("Browse and install available software") )
+            Button1 = easyButton( "gksu-root-terminal", self.iconsize, [_("Root Terminal")], -1, -1 )
+            if self.de == "xfce":
+                Button1.connect( "clicked", self.ButtonClicked, "exo-open --launch TerminalEmulator su -" )
+            else:
+                Button1.connect( "clicked", self.ButtonClicked, "gksu -l mate-terminal" )
+            Button1.show()
+            self.systemBtnHolder.pack_start( Button1, False, False )
+            self.mintMenuWin.setTooltip( Button1, _("Open a terminal as the root user") )
 
         if ( self.showPackageManager == True ):
-            Button2 = easyButton( "applications-system", self.iconsize, [_("Package Manager")], -1, -1 )
-            Button2.connect( "clicked", self.ButtonClicked, "gksu /usr/sbin/synaptic" )
-            Button2.show()
-            self.systemBtnHolder.pack_start( Button2, False, False, 0 )
-            self.mintMenuWin.setTooltip( Button2, _("Install, remove and upgrade software packages") )
+            if os.path.exists("/usr/bin/gpk-application"):
+                Button2 = easyButton( "pacman", self.iconsize, [_("Package Manager")], -1, -1 )
+                Button2.connect( "clicked", self.ButtonClicked, "/usr/bin/gpk-application" )
+                Button2.show()
+                self.systemBtnHolder.pack_start( Button2, False, False )
+                self.mintMenuWin.setTooltip( Button2, _("Install, remove and upgrade software packages using GNOME PackageKit") )
 
         if ( self.showControlCenter == True ):
             Button3 = easyButton( "gtk-preferences", self.iconsize, [_("Control Center")], -1, -1 )
@@ -158,8 +161,13 @@ class pluginclass( object ):
 
         if ( self.showTerminal == True ):
             Button4 = easyButton( "terminal", self.iconsize, [_("Terminal")], -1, -1 )
-            if os.path.exists("/usr/bin/mate-terminal"):
-                Button4.connect( "clicked", self.ButtonClicked, "mate-terminal" )
+            if self.de == "mate":
+                if os.path.exists("/usr/bin/mate-terminal"):
+                    Button4.connect( "clicked", self.ButtonClicked, "mate-terminal" )
+                else:
+                    Button4.connect( "clicked", self.ButtonClicked, "x-terminal-emulator" )
+            elif self.de == "xfce":
+                Button4.connect( "clicked", self.ButtonClicked, "exo-open --launch TerminalEmulator" )
             else:
                 Button4.connect( "clicked", self.ButtonClicked, "x-terminal-emulator" )
             Button4.show()
